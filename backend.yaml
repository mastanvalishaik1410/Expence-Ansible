- name: backend
  hosts: backend
  become: yes
  vars:
    login_host: db
    rootpw: ExpenseApp@1


  tasks:
  - name: disable old node js
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install node js
    ansible.builtin.dnf:
      name: nodejs
      state: installed
  - name: create expense login_user
    ansible.builtin.user:
      name: expense

  - name: create app dir
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download fileurl
    ansible.builtin.get_url:
     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
     dest: /tmp/backend.zip

  - name: unzip folder
    ansible.builtin.unarchive:
     src: /tmp/backend.zip
     dest: /app
     remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy file
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: Install python dependcies
    ansible.builtin.pip:
      name:
      - PyMySql
      - cryptography
      executable: pip3.9

  - name: load data in to mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ rootpw }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: dump
      name: all